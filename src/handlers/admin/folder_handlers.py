"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ø–∞–ø–∫–∞–º–∏
–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –±–æ—Ç–∞.
"""

import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler
from src.utils.admin_utils import (
    add_allowed_folder, remove_allowed_folder, list_allowed_folders
)
from src.utils.folder_navigation import FolderNavigator
from src.utils.yadisk_helper import YaDiskHelper
from src.utils.config_constants import (
    BUTTON_BACK, BUTTON_CANCEL, BUTTON_ADD_FOLDER, BUTTON_CREATE_FOLDER, BUTTON_RETURN_TO_ROOT,
    FOLDER_PERMISSIONS_PROMPT, FOLDER_ADDED_SUCCESS, FOLDER_ADDED_EXISTS
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ admin_handler
from src.handlers.admin.states import (
    ADMIN_MENU, FOLDER_PATH, FOLDER_PERMISSIONS, BROWSE_FOLDERS, 
    SELECT_SUBFOLDER, CREATE_SUBFOLDER
)

logger = logging.getLogger(__name__)
yadisk_helper = YaDiskHelper()

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ –ø–æ –ø–∞–ø–∫–∞–º
folder_navigator = FolderNavigator(
    yadisk_helper=yadisk_helper,
    title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö:",
    add_current_folder_button=True,
    create_folder_button=True,
    extra_buttons=[BUTTON_CANCEL]
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é
async def back_to_admin_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"""
    from src.handlers.admin.menu_handler import admin  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    return await admin(update, context)

async def browse_folders(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –ø–∞–ø–∫–∞–º –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞"""
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ –ø–∞–ø–æ–∫
    success, selected_path, action_type = await folder_navigator.handle_message(update, context)
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
    if success:
        # –î–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if action_type == "back":
            return await back_to_admin_menu(update, context)
        
        elif action_type == "cancel":
            await update.message.reply_text(
                "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
                reply_markup=ReplyKeyboardRemove()
            )
            return await back_to_admin_menu(update, context)
        
        elif action_type == "add_folder":
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
            success, message = add_allowed_folder(selected_path)
            
            if success:
                await update.message.reply_text(
                    f"‚úÖ {message}\n\n" + FOLDER_PERMISSIONS_PROMPT,
                    reply_markup=ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], one_time_keyboard=True, resize_keyboard=True)
                )
                context.user_data["current_folder"] = selected_path
                return FOLDER_PERMISSIONS
            else:
                await update.message.reply_text(
                    f"‚ùå {message}",
                    reply_markup=ReplyKeyboardMarkup([[BUTTON_BACK]], one_time_keyboard=True, resize_keyboard=True)
                )
                return ADMIN_MENU
        
        elif action_type == "create_folder":
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏
            return CREATE_SUBFOLDER
        
        elif action_type == "navigate":
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ –ø–∞–ø–∫–∞–º
            return BROWSE_FOLDERS
        
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        return BROWSE_FOLDERS
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    return BROWSE_FOLDERS

async def create_subfolder(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø–æ–¥–ø–∞–ø–∫—É –≤ —Ç–µ–∫—É—â–µ–º –ø—É—Ç–∏"""
    text = update.message.text
    
    if text == BUTTON_BACK:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –ø–∞–ø–∫–∞–º
        current_path = context.user_data.get("current_path", "/")
        await folder_navigator.show_folders(update, context, current_path)
        return BROWSE_FOLDERS
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É —Å –ø–æ–º–æ—â—å—é –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞
    success, new_folder_path = await folder_navigator.create_folder(update, context, text)
    
    if success:
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –¥–æ–±–∞–≤–∏—Ç—å –ª–∏ —Å–æ–∑–¥–∞–Ω–Ω—É—é –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
        await update.message.reply_text(
            "–î–æ–±–∞–≤–∏—Ç—å —ç—Ç—É –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö?",
            reply_markup=ReplyKeyboardMarkup([
                [BUTTON_ADD_FOLDER], 
                [BUTTON_RETURN_TO_ROOT],
                [BUTTON_CANCEL]
            ], one_time_keyboard=True, resize_keyboard=True)
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å
        context.user_data["current_path"] = new_folder_path
        return SELECT_SUBFOLDER
        
    # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞—Ç—å –≤–≤–æ–¥
    return CREATE_SUBFOLDER

async def select_subfolder(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–¥–ø–∞–ø–∫–∏ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏"""
    text = update.message.text
    current_path = context.user_data.get("current_path", "/")
    
    if text == BUTTON_CANCEL:
        await update.message.reply_text(
            "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
            reply_markup=ReplyKeyboardRemove()
        )
        return await back_to_admin_menu(update, context)
    
    if text == BUTTON_RETURN_TO_ROOT:
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –∫–æ—Ä–Ω–µ–≤–æ–º—É –≤—ã–±–æ—Ä—É –ø–∞–ø–æ–∫
        await folder_navigator.show_folders(update, context, "/")
        return BROWSE_FOLDERS
    
    if text == BUTTON_CREATE_FOLDER:
        await update.message.reply_text(
            f"üìÅ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏ –≤ '{current_path}':",
            reply_markup=ReplyKeyboardMarkup([[BUTTON_BACK]], one_time_keyboard=True, resize_keyboard=True)
        )
        return CREATE_SUBFOLDER
    
    if text == BUTTON_ADD_FOLDER or text == "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ":
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
        success, message = add_allowed_folder(current_path)
        
        if success:
            await update.message.reply_text(
                f"‚úÖ {message}\n\n" + FOLDER_PERMISSIONS_PROMPT,
                reply_markup=ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], one_time_keyboard=True, resize_keyboard=True)
            )
            context.user_data["current_folder"] = current_path
            return FOLDER_PERMISSIONS
        else:
            await update.message.reply_text(
                f"‚ùå {message}",
                reply_markup=ReplyKeyboardMarkup([[BUTTON_BACK]], one_time_keyboard=True, resize_keyboard=True)
            )
            return ADMIN_MENU
    
    # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π
    await update.message.reply_text(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞",
        reply_markup=ReplyKeyboardMarkup([[BUTTON_RETURN_TO_ROOT], [BUTTON_CANCEL]], one_time_keyboard=True, resize_keyboard=True)
    )
    return SELECT_SUBFOLDER

async def handle_folder_path(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø—É—Ç–∏ –ø–∞–ø–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏"""
    text = update.message.text
    
    if text == BUTTON_BACK:
        return await back_to_admin_menu(update, context)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö (–±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    success, message = add_allowed_folder(text)
    
    if success:
        await update.message.reply_text(
            f"‚úÖ {message}\n\n" + FOLDER_PERMISSIONS_PROMPT,
            reply_markup=ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], one_time_keyboard=True, resize_keyboard=True)
        )
        context.user_data["current_folder"] = text
        return FOLDER_PERMISSIONS
    else:
        await update.message.reply_text(
            f"‚ùå {message}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([[BUTTON_BACK]], one_time_keyboard=True, resize_keyboard=True)
        )
        return FOLDER_PATH

async def handle_remove_folder(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"""
    text = update.message.text
    
    if text == BUTTON_BACK:
        return await back_to_admin_menu(update, context)
    
    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    success, message = remove_allowed_folder(text)
    
    await update.message.reply_text(
        f"{'‚úÖ' if success else '‚ùå'} {message}",
        reply_markup=ReplyKeyboardMarkup([[BUTTON_BACK]], one_time_keyboard=True, resize_keyboard=True)
    )
    
    return REMOVE_FOLDER 