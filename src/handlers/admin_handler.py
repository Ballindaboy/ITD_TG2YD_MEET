import logging
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler
from config.config import is_admin, ROOT_DIRS
from src.utils.admin_utils import (
    add_allowed_folder, remove_allowed_folder, list_allowed_folders,
    add_allowed_user, remove_allowed_user, list_allowed_users
)
from src.utils.state_manager import state_manager

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –¥–∏–∞–ª–æ–≥–æ–≤
ADMIN_MENU = 0
ADD_FOLDER = 1
REMOVE_FOLDER = 2
ADD_USER = 3
REMOVE_USER = 4
CHOOSE_CATEGORY = 5
FOLDER_PATH = 6
USER_ID = 7

logger = logging.getLogger(__name__)

async def admin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"""
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if not is_admin(user_id):
        await update.message.reply_text(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
        )
        return ConversationHandler.END
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = [
        ["üìÅ –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É", "üóë –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É"],
        ["üë§ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"],
        ["üìã –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫", "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
        ["üîô –í—ã—Ö–æ–¥"]
    ]
    
    await update.message.reply_text(
        "üë®‚Äçüíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    
    return ADMIN_MENU

async def admin_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–º –º–µ–Ω—é"""
    text = update.message.text
    
    if text == "üìÅ –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        keyboard = [
            ["1. –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ (TD.Equipment.Suppliers)"],
            ["2. –ö–ª–∏–µ–Ω—Ç—ã (TD.Equipment.Clients)"],
            ["3. –¶–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (TD.Equipment.Offers)"],
            ["üîô –ù–∞–∑–∞–¥"]
        ]
        
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏:",
            reply_markup=ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
        )
        
        return CHOOSE_CATEGORY
    
    elif text == "üóë –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É":
        folders = list_allowed_folders()
        
        if folders == "–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –ø—É—Å—Ç":
            await update.message.reply_text(
                "‚ùå –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –ø—É—Å—Ç. –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å."
            )
            return await admin(update, context)
        
        await update.message.reply_text(
            f"{folders}\n\n"
            "–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ –µ—ë –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<–∫–∞—Ç–µ–≥–æ—Ä–∏—è>:<–ø—É—Ç—å>\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: suppliers:CompanyName\n\n"
            "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        
        return REMOVE_FOLDER
    
    elif text == "üë§ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.\n\n"
            "–ì–¥–µ –≤–∑—è—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?\n"
            "1. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @userinfobot\n"
            "2. –ë–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π —Å ID\n\n"
            "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        
        return ADD_USER
    
    elif text == "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
        users = list_allowed_users()
        
        if users == "–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç":
            await update.message.reply_text(
                "‚ùå –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç. –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å."
            )
            return await admin(update, context)
        
        await update.message.reply_text(
            f"{users}\n\n"
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.\n\n"
            "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        
        return REMOVE_USER
    
    elif text == "üìã –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫":
        folders = list_allowed_folders()
        
        await update.message.reply_text(
            folders,
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        
        return ADMIN_MENU
    
    elif text == "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π":
        users = list_allowed_users()
        
        await update.message.reply_text(
            users,
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        
        return ADMIN_MENU
    
    elif text == "üîô –í—ã—Ö–æ–¥":
        await update.message.reply_text(
            "‚úÖ –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é",
            reply_markup=ReplyKeyboardRemove()
        )
        
        return ConversationHandler.END
    
    else:
        await update.message.reply_text(
            "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é."
        )
        
        return await admin(update, context)

async def handle_category_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏"""
    text = update.message.text
    
    if text == "üîô –ù–∞–∑–∞–¥":
        return await admin(update, context)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category = None
    if "1" in text or "–ü–æ—Å—Ç–∞–≤—â–∏–∫" in text or "Suppliers" in text:
        category = "suppliers"
        category_name = "–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏"
    elif "2" in text or "–ö–ª–∏–µ–Ω—Ç" in text or "Clients" in text:
        category = "clients"
        category_name = "–ö–ª–∏–µ–Ω—Ç—ã"
    elif "3" in text or "–¶–µ–Ω–æ–≤" in text or "Offers" in text:
        category = "offers"
        category_name = "–¶–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
    else:
        await update.message.reply_text(
            "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
        )
        return CHOOSE_CATEGORY
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    context.user_data["admin_category"] = category
    context.user_data["admin_category_name"] = category_name
    
    await update.message.reply_text(
        f"–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name}\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–∞–ø–∫–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É 'CompanyName' –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏',\n"
        "–≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ 'CompanyName' (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫).\n\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
        reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
    )
    
    return FOLDER_PATH

async def handle_folder_path(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –ø—É—Ç–∏ –ø–∞–ø–∫–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏"""
    text = update.message.text
    
    if text == "üîô –ù–∞–∑–∞–¥":
        return await admin(update, context)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    category = context.user_data.get("admin_category")
    category_name = context.user_data.get("admin_category_name")
    
    if not category:
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞."
        )
        return await admin(update, context)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    success, message = add_allowed_folder(text, category)
    
    if success:
        await update.message.reply_text(
            f"‚úÖ {message}",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    else:
        await update.message.reply_text(
            f"‚ùå {message}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    return await admin(update, context)

async def handle_remove_folder(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏"""
    text = update.message.text
    
    if text == "üîô –ù–∞–∑–∞–¥":
        return await admin(update, context)
    
    # –ü–∞—Ä—Å–∏–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        category, folder_path = text.split(":", 1)
        category = category.strip()
        folder_path = folder_path.strip()
    except ValueError:
        await update.message.reply_text(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <–∫–∞—Ç–µ–≥–æ—Ä–∏—è>:<–ø—É—Ç—å>\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: suppliers:CompanyName",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        return REMOVE_FOLDER
    
    # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    success, message = remove_allowed_folder(folder_path, category)
    
    if success:
        await update.message.reply_text(
            f"‚úÖ {message}",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    else:
        await update.message.reply_text(
            f"‚ùå {message}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    return await admin(update, context)

async def handle_add_user(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    text = update.message.text
    
    if text == "üîô –ù–∞–∑–∞–¥":
        return await admin(update, context)
    
    # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤–≤–æ–¥ –≤ —á–∏—Å–ª–æ (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    try:
        user_id = int(text)
    except ValueError:
        await update.message.reply_text(
            "‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        return ADD_USER
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    success, message = add_allowed_user(user_id)
    
    if success:
        await update.message.reply_text(
            f"‚úÖ {message}",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    else:
        await update.message.reply_text(
            f"‚ùå {message}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    return await admin(update, context)

async def handle_remove_user(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    text = update.message.text
    
    if text == "üîô –ù–∞–∑–∞–¥":
        return await admin(update, context)
    
    # –ü—Ä–æ–±—É–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤–≤–æ–¥ –≤ —á–∏—Å–ª–æ (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    try:
        user_id = int(text)
    except ValueError:
        await update.message.reply_text(
            "‚ùå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
        return REMOVE_USER
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    success, message = remove_allowed_user(user_id)
    
    if success:
        await update.message.reply_text(
            f"‚úÖ {message}",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    else:
        await update.message.reply_text(
            f"‚ùå {message}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ 'üîô –ù–∞–∑–∞–¥' –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], one_time_keyboard=True, resize_keyboard=True)
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    return await admin(update, context)

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω—è–µ—Ç –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥"""
    await update.message.reply_text(
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END 