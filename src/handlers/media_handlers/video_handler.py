import os
import logging
import tempfile
from telegram import Update
from telegram.ext import ContextTypes
from src.utils.yadisk_helper import YaDiskHelper
from src.utils.state_manager import state_manager
from src.handlers.media_handlers.common import download_telegram_file

logger = logging.getLogger(__name__)
yadisk_helper = YaDiskHelper()

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE, file_id, file_name, session) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ, —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤"""
    user_id = update.effective_user.id
    
    # –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    status_message = await update.message.reply_text("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
            tmp_path = tmp_file.name
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await status_message.edit_text("üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ Telegram...")
        await download_telegram_file(context, file_id, tmp_path)
        
        # –£–∑–Ω–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        extension = "mp4"
        if "." in file_name:
            extension = file_name.split(".")[-1]
        
        # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
        yandex_path = session.get_media_path(extension)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(tmp_path)
        file_size_mb = round(file_size / (1024 * 1024), 2)
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–æ–ª—å—à–∏—Ö –≤–∏–¥–µ–æ
        if file_size > 10 * 1024 * 1024:  # –ë–æ–ª—å—à–µ 10–ú–ë
            await status_message.edit_text(
                f"‚òÅÔ∏è –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ ({file_size_mb} –ú–ë)...\n"
                f"–≠—Ç–æ –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è. –Ø –±—É–¥—É –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ."
            )
        else:
            await status_message.edit_text(
                f"‚òÅÔ∏è –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ ({file_size_mb} –ú–ë)...\n"
                f"–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç."
            )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ —Å –±–æ–ª–µ–µ —á–∞—Å—Ç—ã–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏
        last_progress = 0
        last_update_time = 0
        import time
        
        def progress_callback(progress):
            nonlocal last_progress, last_update_time
            current_time = time.time()
            
            # –õ–æ–≥–∏—Ä—É–µ–º –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ
            logger.info(f"–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ: {progress}%")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ 10% –∏–ª–∏ –ø—Ä–æ—à–ª–æ 5 —Å–µ–∫—É–Ω–¥ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            if (progress - last_progress >= 10 or current_time - last_update_time >= 5) and progress > 0:
                last_progress = progress
                last_update_time = current_time
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                progress_bar = "‚ñ†" * int(progress / 10) + "‚ñ°" * (10 - int(progress / 10))
                
                context.application.create_task(
                    status_message.edit_text(
                        f"‚òÅÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ: {progress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n"
                        f"[{progress_bar}]\n"
                        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏."
                    )
                )
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º –¥–ª—è –≤–∏–¥–µ–æ
        logger.debug(f"–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫: {yandex_path}")
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –≤–∏–¥–µ–æ
            yadisk_helper.upload_file(tmp_path, yandex_path, progress_callback)
        except Exception as e:
            if "—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" in str(e) or "already exists" in str(e):
                logger.warning(f"–§–∞–π–ª {yandex_path} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é.")
                await status_message.edit_text(f"‚ö†Ô∏è –§–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é...")
                yadisk_helper.upload_file(tmp_path, yandex_path, overwrite=True)
            else:
                raise
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.unlink(tmp_path)
        
        # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ –ø–æ–¥–ø–∏—Å–∏
        await status_message.edit_text(
            f"‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫\n{session.file_prefix}.{extension}\n\n"
            "–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å—å –∫ –≤–∏–¥–µ–æ? –ï—Å–ª–∏ –¥–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
        )
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
        state_manager.set_data(user_id, "awaiting_caption", True)
        
    except Exception as e:
        error_msg = str(e)
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {error_msg}", exc_info=True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_message = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ."
        
        if "timeout" in error_msg.lower():
            user_message += "\n‚è± –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –í–æ–∑–º–æ–∂–Ω–æ, –≤–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é."
        elif "connection" in error_msg.lower():
            user_message += "\nüåê –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
        elif "—Å—É—â–µ—Å—Ç–≤—É–µ—Ç" in error_msg.lower() or "exists" in error_msg.lower():
            user_message += "\nüîÑ –§–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–∞—Å—å."
        elif "permission" in error_msg.lower() or "–¥–æ—Å—Ç—É–ø" in error_msg.lower():
            user_message += "\nüîí –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ."
        elif "size" in error_msg.lower() or "—Ä–∞–∑–º–µ—Ä" in error_msg.lower():
            user_message += "\nüìè –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–∂–∞—Ç—å –≤–∏–¥–µ–æ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π."
        else:
            user_message += f"\n‚ö†Ô∏è –î–µ—Ç–∞–ª–∏: {error_msg[:100]}..." if len(error_msg) > 100 else f"\n‚ö†Ô∏è –î–µ—Ç–∞–ª–∏: {error_msg}"
        
        user_message += "\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        
        await status_message.edit_text(user_message)
        
        if 'tmp_path' in locals():
            try:
                os.unlink(tmp_path)
            except:
                pass 