import os
import logging
import tempfile
import time
from telegram import Update
from telegram.ext import ContextTypes
from src.utils.yadisk_helper import YaDiskHelper
from src.utils.state_manager import state_manager
from src.handlers.media_handlers.common import download_telegram_file
from src.utils.speech_recognition import transcribe_audio

logger = logging.getLogger(__name__)
yadisk_helper = YaDiskHelper()

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE, file_id, file_name, session) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.effective_user.id
    
    # –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    status_message = await update.message.reply_text("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        with tempfile.NamedTemporaryFile(delete=False, suffix='.ogg') as tmp_file:
            tmp_path = tmp_file.name
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        await status_message.edit_text("üì• –°–∫–∞—á–∏–≤–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        await download_telegram_file(context, file_id, tmp_path)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫ –ø—É—Ç–∏ —Ñ–∞–π–ª–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
        unique_id = int(time.time() * 1000) % 10000  # –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã –º–æ–¥—É–ª—å 10000 –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
        modified_prefix = f"{session.file_prefix}_{unique_id}"
        yandex_path = f"{session.folder_path}/{modified_prefix}.ogg"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(tmp_path)
        file_size_mb = round(file_size / (1024 * 1024), 2)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å—Ç–∞—Ç—É—Å–∞
        logger.debug(f"–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {yandex_path}")
        await status_message.edit_text(f"‚òÅÔ∏è –ó–∞–≥—Ä—É–∂–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ({file_size_mb} –ú–ë) –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫...\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.")
        
        try:
            yadisk_helper.upload_file(tmp_path, yandex_path)
        except Exception as e:
            if "—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" in str(e) or "already exists" in str(e):
                logger.warning(f"–§–∞–π–ª {yandex_path} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é.")
                await status_message.edit_text(f"‚ö†Ô∏è –§–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é...")
                yadisk_helper.upload_file(tmp_path, yandex_path, overwrite=True)
            else:
                raise
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await status_message.edit_text("üéô –†–∞—Å–ø–æ–∑–Ω–∞—é —Ä–µ—á—å...\n–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.")
        
        # –ü—Ä–æ–∏–∑–≤–æ–¥–∏–º —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é –∞—É–¥–∏–æ
        transcription = transcribe_audio(tmp_path)
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.unlink(tmp_path)
        
        if transcription:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            await status_message.edit_text("üìù –î–æ–±–∞–≤–ª—è—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≤ –æ—Ç—á–µ—Ç...")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≤ —Ñ–∞–π–ª –≤—Å—Ç—Ä–µ—á–∏
            yadisk_helper.append_to_text_file(
                session.txt_file_path, 
                f"–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {transcription}"
            )
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            await status_message.edit_text(
                f"‚úÖ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫\n{modified_prefix}.ogg\n\n"
                f"üìù –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:\n{transcription}\n\n"
                "–ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –Ω–µ—Ç–æ—á–Ω–∞—è, –ø—Ä–∏—à–ª–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç, –∏ —è –æ–±–Ω–æ–≤–ª—é –æ—Ç—á—ë—Ç:"
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
            state_manager.set_data(user_id, "awaiting_transcription_edit", True)
        else:
            # –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –≤—Ä—É—á–Ω—É—é
            await status_message.edit_text(
                f"‚úÖ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫\n{modified_prefix}.ogg\n\n"
                "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç.\n"
                "–ù–∞–ø–∏—à–∏—Ç–µ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É —Ç–µ–∫—Å—Ç–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏ —è –¥–æ–±–∞–≤–ª—é –µ—ë –≤ –æ—Ç—á—ë—Ç:"
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
            state_manager.set_data(user_id, "awaiting_transcription", True)
        
    except Exception as e:
        error_msg = str(e)
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {error_msg}", exc_info=True)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_message = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."
        
        if "timeout" in error_msg.lower():
            user_message += "\n‚è± –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä–æ–º –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞."
        elif "connection" in error_msg.lower():
            user_message += "\nüåê –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
        elif "—Å—É—â–µ—Å—Ç–≤—É–µ—Ç" in error_msg.lower() or "exists" in error_msg.lower():
            user_message += "\nüîÑ –§–∞–π–ª —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å –Ω–µ —É–¥–∞–ª–∞—Å—å."
        elif "permission" in error_msg.lower() or "–¥–æ—Å—Ç—É–ø" in error_msg.lower():
            user_message += "\nüîí –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ."
        else:
            user_message += f"\n‚ö†Ô∏è –î–µ—Ç–∞–ª–∏: {error_msg[:100]}..." if len(error_msg) > 100 else f"\n‚ö†Ô∏è –î–µ—Ç–∞–ª–∏: {error_msg}"
        
        user_message += "\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        
        await status_message.edit_text(user_message)
        
        if 'tmp_path' in locals():
            try:
                os.unlink(tmp_path)
            except:
                pass

async def process_transcription(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –≤–≤–µ–¥–µ–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    user_id = update.effective_user.id
    transcription = update.message.text
    session = state_manager.get_session(user_id)
    
    if not session:
        return
    
    # –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏    
    status_message = await update.message.reply_text("üîÑ –î–æ–±–∞–≤–ª—è—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≤ –æ—Ç—á–µ—Ç...")
        
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≤ —Ñ–∞–π–ª –≤—Å—Ç—Ä–µ—á–∏
        yadisk_helper.append_to_text_file(
            session.txt_file_path, 
            f"–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {transcription}"
        )
        await status_message.edit_text("‚úÖ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç—á—ë—Ç.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏: {str(e)}", exc_info=True)
        await status_message.edit_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É: {str(e)[:100]}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
    state_manager.set_data(user_id, "awaiting_transcription", False)

async def process_transcription_edit(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    user_id = update.effective_user.id
    improved_transcription = update.message.text
    session = state_manager.get_session(user_id)
    
    if not session:
        return
    
    # –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏    
    status_message = await update.message.reply_text("üîÑ –û–±–Ω–æ–≤–ª—è—é —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≤ –æ—Ç—á–µ—Ç–µ...")
        
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É –≤ —Ñ–∞–π–ª–µ –≤—Å—Ç—Ä–µ—á–∏
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—á–∞–Ω–∏–µ, —á—Ç–æ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –±—ã–ª–∞ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞
        yadisk_helper.append_to_text_file(
            session.txt_file_path, 
            f"–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {improved_transcription}"
        )
        await status_message.edit_text("‚úÖ –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ –æ—Ç—á—ë—Ç–µ.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏: {str(e)}", exc_info=True)
        await status_message.edit_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É: {str(e)[:100]}")
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    state_manager.set_data(user_id, "awaiting_transcription_edit", False) 