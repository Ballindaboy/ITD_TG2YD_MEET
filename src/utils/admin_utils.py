import json
import logging
from config.config import FOLDERS_FILE, USERS_FILE

logger = logging.getLogger(__name__)

def load_allowed_folders():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(FOLDERS_FILE, 'r') as f:
            return json.load(f)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫: {str(e)}")
        return []

def save_allowed_folders(folders):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –≤ —Ñ–∞–π–ª"""
    try:
        with open(FOLDERS_FILE, 'w') as f:
            json.dump(folders, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫: {str(e)}")
        return False

def add_allowed_folder(folder_path, category):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"""
    folders = load_allowed_folders()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–∞—è –ø–∞–ø–∫–∞
    for folder in folders:
        if folder['path'] == folder_path and folder['category'] == category:
            return False, "–≠—Ç–∞ –ø–∞–ø–∫–∞ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É
    folders.append({
        'path': folder_path,
        'category': category
    })
    
    if save_allowed_folders(folders):
        return True, f"–ü–∞–ø–∫–∞ {folder_path} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category}"
    else:
        return False, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–∞–ø–æ–∫"

def remove_allowed_folder(folder_path, category):
    """–£–¥–∞–ª—è–µ—Ç –ø–∞–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"""
    folders = load_allowed_folders()
    
    # –ò—â–µ–º –ø–∞–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    found = False
    new_folders = []
    for folder in folders:
        if folder['path'] == folder_path and folder['category'] == category:
            found = True
        else:
            new_folders.append(folder)
    
    if not found:
        return False, "–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"
    
    if save_allowed_folders(new_folders):
        return True, f"–ü–∞–ø–∫–∞ {folder_path} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}"
    else:
        return False, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–∞–ø–æ–∫"

def list_allowed_folders():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    folders = load_allowed_folders()
    if not folders:
        return "–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ –ø—É—Å—Ç"
    
    result = "üìÇ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏:\n\n"
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–∞–ø–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    by_category = {}
    for folder in folders:
        category = folder['category']
        if category not in by_category:
            by_category[category] = []
        by_category[category].append(folder['path'])
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    for category, paths in by_category.items():
        if category == "suppliers":
            category_name = "–ü–æ—Å—Ç–∞–≤—â–∏–∫–∏"
        elif category == "clients":
            category_name = "–ö–ª–∏–µ–Ω—Ç—ã"
        elif category == "offers":
            category_name = "–¶–µ–Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
        else:
            category_name = category
            
        result += f"üîπ {category_name}:\n"
        for path in paths:
            result += f"  - {path}\n"
        result += "\n"
    
    return result

def load_allowed_users():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(USERS_FILE, 'r') as f:
            return json.load(f)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {str(e)}")
        return []

def save_allowed_users(users):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª"""
    try:
        with open(USERS_FILE, 'w') as f:
            json.dump(users, f, ensure_ascii=False, indent=2)
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {str(e)}")
        return False

def add_allowed_user(user_id, username=None, first_name=None, last_name=None):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"""
    users = load_allowed_users()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    for user in users:
        if user['id'] == user_id:
            return False, "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = {
        'id': user_id,
        'username': username,
        'first_name': first_name,
        'last_name': last_name,
        'added_at': get_timestamp()
    }
    
    users.append(user_data)
    
    if save_allowed_users(users):
        name = username or first_name or f"ID: {user_id}"
        return True, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"
    else:
        return False, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"

def remove_allowed_user(user_id):
    """–£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"""
    users = load_allowed_users()
    
    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    found = False
    user_name = None
    new_users = []
    for user in users:
        if user['id'] == user_id:
            found = True
            user_name = user.get('username') or user.get('first_name') or f"ID: {user_id}"
        else:
            new_users.append(user)
    
    if not found:
        return False, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"
    
    if save_allowed_users(new_users):
        return True, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_name} —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö"
    else:
        return False, "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"

def list_allowed_users():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    users = load_allowed_users()
    if not users:
        return "–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç"
    
    result = "üë• –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n\n"
    
    for i, user in enumerate(users, 1):
        username = user.get('username', '')
        first_name = user.get('first_name', '')
        last_name = user.get('last_name', '')
        user_id = user.get('id', '')
        
        name_parts = []
        if first_name:
            name_parts.append(first_name)
        if last_name:
            name_parts.append(last_name)
        full_name = ' '.join(name_parts)
        
        if username:
            result += f"{i}. @{username}"
            if full_name:
                result += f" ({full_name})"
        else:
            result += f"{i}. {full_name or '–ë–µ–∑ –∏–º–µ–Ω–∏'}"
        
        result += f" [ID: {user_id}]\n"
    
    return result

def is_user_allowed(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    users = load_allowed_users()
    return any(user['id'] == user_id for user in users)

def get_timestamp():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π timestamp"""
    from datetime import datetime
    return datetime.utcnow().strftime("%Y-%m-%d %H:%M:%S") 